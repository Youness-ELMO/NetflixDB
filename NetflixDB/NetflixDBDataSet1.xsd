<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NetflixDBDataSet1" targetNamespace="http://tempuri.org/NetflixDBDataSet1.xsd" xmlns:mstns="http://tempuri.org/NetflixDBDataSet1.xsd" xmlns="http://tempuri.org/NetflixDBDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="NetflixDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="NetflixDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.NetflixDB.Properties.Settings.GlobalReference.Default.NetflixDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GenreTableAdapter" GeneratorDataComponentClassName="GenreTableAdapter" Name="Genre" UserDataComponentName="GenreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="NetflixDBConnectionString (Settings)" DbObjectName="NetflixDB.dbo.Genre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Genre] WHERE (([CodeGenre] = @Original_CodeGenre) AND ((@IsNull_intituleGenre = 1 AND [intituleGenre] IS NULL) OR ([intituleGenre] = @Original_intituleGenre)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CodeGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CodeGenre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_intituleGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_intituleGenre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Genre] ([CodeGenre], [intituleGenre]) VALUES (@CodeGenre, @intituleGenre);
SELECT CodeGenre, intituleGenre FROM Genre WHERE (CodeGenre = @CodeGenre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CodeGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CodeGenre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@intituleGenre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CodeGenre, intituleGenre FROM dbo.Genre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Genre] SET [CodeGenre] = @CodeGenre, [intituleGenre] = @intituleGenre WHERE (([CodeGenre] = @Original_CodeGenre) AND ((@IsNull_intituleGenre = 1 AND [intituleGenre] IS NULL) OR ([intituleGenre] = @Original_intituleGenre)));
SELECT CodeGenre, intituleGenre FROM Genre WHERE (CodeGenre = @CodeGenre)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CodeGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CodeGenre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@intituleGenre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CodeGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CodeGenre" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_intituleGenre" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_intituleGenre" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="intituleGenre" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CodeGenre" DataSetColumn="CodeGenre" />
              <Mapping SourceColumn="intituleGenre" DataSetColumn="intituleGenre" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="NetflixDBDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="NetflixDBDataSet1" msprop:Generator_DataSetName="NetflixDBDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Genre" msprop:Generator_RowEvHandlerName="GenreRowChangeEventHandler" msprop:Generator_RowDeletedName="GenreRowDeleted" msprop:Generator_RowDeletingName="GenreRowDeleting" msprop:Generator_RowEvArgName="GenreRowChangeEvent" msprop:Generator_TablePropName="Genre" msprop:Generator_RowChangedName="GenreRowChanged" msprop:Generator_RowChangingName="GenreRowChanging" msprop:Generator_TableClassName="GenreDataTable" msprop:Generator_RowClassName="GenreRow" msprop:Generator_TableVarName="tableGenre" msprop:Generator_UserTableName="Genre">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CodeGenre" msprop:Generator_ColumnPropNameInRow="CodeGenre" msprop:Generator_ColumnPropNameInTable="CodeGenreColumn" msprop:Generator_ColumnVarNameInTable="columnCodeGenre" msprop:Generator_UserColumnName="CodeGenre" type="xs:int" />
              <xs:element name="intituleGenre" msprop:Generator_ColumnPropNameInRow="intituleGenre" msprop:Generator_ColumnPropNameInTable="intituleGenreColumn" msprop:Generator_ColumnVarNameInTable="columnintituleGenre" msprop:Generator_UserColumnName="intituleGenre" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Genre" />
      <xs:field xpath="mstns:CodeGenre" />
    </xs:unique>
  </xs:element>
</xs:schema>